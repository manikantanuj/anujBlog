{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/auth.service.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/material.module.ts","webpack:///src/app/posts/post-dashboard/post-dashboard.component.html","webpack:///src/app/posts/post-dashboard/post-dashboard.component.ts","webpack:///src/app/posts/post-details/post-details.component.html","webpack:///src/app/posts/post-details/post-details.component.ts","webpack:///src/app/posts/post-list/post-list.component.html","webpack:///src/app/posts/post-list/post-list.component.ts","webpack:///src/app/posts/post.service.ts","webpack:///src/app/posts/posts.module.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","AppComponent","title","AppModule","AuthService","afAuth","authState","subscribe","data","signInWithPopup","GoogleAuthProvider","signOut","authenticated","uid","CoreModule","FooterComponent","MaterialModule","PostDashboardComponent","auth","postService","storage","router","image","buttonText","author","displayName","email","authorId","currentUserId","content","published","Date","create","setTimeout","navigate","event","file","target","files","name","type","split","alert","fileRef","ref","task","upload","uploadPercent","percentageChanges","snapshotChanges","pipe","getDownloadURL","url","downloadURL","console","log","post","PostDetailsComponent","route","editing","getPost","snapshot","paramMap","get","getPostData","formData","update","PostListComponent","getPosts","posts","PostService","afs","postCollection","collection","actions","map","a","payload","doc","postDoc","valueChanges","add","PostsModule","NavbarComponent","SharedModule","environment","production","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { PostDashboardComponent } from './posts/post-dashboard/post-dashboard.component';\nimport { PostDetailsComponent } from './posts/post-details/post-details.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path:'',component:PostListComponent},\n  {path:'blog',component:PostListComponent},\n  {path:'blog/:id',component:PostDetailsComponent},\n  {path:'dashboard',component:PostDashboardComponent}\n];  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myblog';\n}\n","import { PostService } from './posts/post.service';\nimport { Observable, from, observable } from 'rxjs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { PostsModule } from './posts/posts.module';\nimport { HttpClientModule } from  '@angular/common/http';\nimport {DatePipe} from '@angular/common';\nimport { FooterComponent } from './footer/footer.component'\n// import {}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, // firestore\n   // AngularFireAuth, // auth\n    AngularFireStorageModule, // storage\n    BrowserAnimationsModule,\n    AngularFireAnalyticsModule,\n    PostsModule,\n    HttpClientModule,\n \n\n    \n  ],\n  providers: [PostService,DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Injectable } from '@angular/core';\nimport * as firebase from \"firebase/app\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authState:any=null\n\n  constructor(public afAuth:AngularFireAuth) {\n    this.afAuth.authState.subscribe(data=>\n      this.authState=data\n    )\n   }\n\n   get authenticated():boolean{\n     return this.authState!==null\n   }\n   get currentUserId():string{\n     return this.authenticated ? this.authState.uid :null\n   }\n\n  login(){\n   this.afAuth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n  //  this.afAuth.signInWithPopup(new firebase.auth.FacebookAuthProvider());\n  \n  }\n  // loginWithFb(){\n  //   this.afAuth.signInWithPopup(new firebase.auth.FacebookAuthProvider());\n  // }\n  logout(){\n this.afAuth.signOut();\n  }\n}\n","import { AuthService } from './auth.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  providers:[AuthService],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<div class=\"fixed-footer\">\n    <div class=\"container\"> Developed By &bull; <u>Music & Travel & LIfe 2020</u> <br>\n    Follow us on social platforms. \n    </div>  \n    \n    \n    <div class=\"footer-social\">\n        <a href=\"https://www.instagram.com/anuj112.raj/\" target=\"_blank\" class=\"fa fa-instagram\"></a>\n        <a href=\"https://www.facebook.com/Manikantanuj/\" target=\"_blank\" class=\"fa fa-facebook\"></a>\n       <a href=\"https://twitter.com/manikantanuj03/  \" target=\"_blank\" class=\"fa fa-twitter\"></a>\n       <a href=\"https://www.linkedin.com/in/anuj-raj03/  \" target=\"_blank\" class=\"fa fa-linkedin\"></a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatButtonModule, \n    MatToolbarModule, \n    MatExpansionModule, \n    MatInputModule, \n    MatProgressBarModule,\n    MatCardModule,\n    MatIconModule\n  ],\n  exports: [MatButtonModule,\n     MatToolbarModule,\n      MatExpansionModule, \n      MatInputModule, \n      MatProgressBarModule,\n      MatCardModule,\n      MatIconModule\n    ]\n})\nexport class MaterialModule { }\n","<section>\n    <mat-accordion>\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Create a Post\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <div>\n                <input type=\"file\" name =\"file\" id=\"file\" (change)=\"uploadImage($event)\">\n                <div [hidden]=\"!uploadPercent\">\n                    <mat-progress-bar mode=\"determinate\" value=\"{{uploadPercent | async}}\"></mat-progress-bar>\n                </div>\n                <div [hidden]=!image>\n                    <img [src]=\"image || '//:0' \">\n                </div>\n                \n            </div>\n            <mat-form-field>\n                <input matInput placeholder=\"Post Title\" [(ngModel)]=\"title\">\n            </mat-form-field><br>\n            \n            <mat-form-field>\n                <textarea matInput placeholder=\"Post Content\" [(ngModel)]=\"content\" rows=\"10\"></textarea>\n            </mat-form-field>\n            <br>\n            <button mat-raised-button color=\"accent\" (click)=\"createPost()\" [disabled] = \"!title || !content || !image\">{{buttonText}}</button>\n            \n        </mat-expansion-panel>\n    </mat-accordion>\n</section>\n\n\n","import { Router } from '@angular/router';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Observable } from 'rxjs';\nimport { PostService } from './../post.service';\nimport { AuthService } from './../../core/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'app-post-dashboard',\n  templateUrl: './post-dashboard.component.html',\n  styleUrls: ['./post-dashboard.component.css']\n})\nexport class PostDashboardComponent implements OnInit {\n  title: string\n  image: any = null\n  content: string\n  // file:File =null\n  buttonText: string = \"Create Post\"\n\n  uploadPercent: Observable<number>\n  downloadURL: Observable<string>\n  constructor(private auth: AuthService,\n    private postService: PostService,\n    private storage: AngularFireStorage,\n    private router:Router) {\n    // const ref = this.storage.ref('users/davideast.jpg');\n    // this.profileUrl = ref.getDownloadURL();\n  }\n\n  ngOnInit(): void {\n  }\n  createPost() {\n    const data = {\n      author: this.auth.authState.displayName || this.auth.authState.email,\n      authorId: this.auth.currentUserId,\n\n      content: this.content,\n      image: this.image,\n      published: new Date(),\n      title: this.title\n    };\n    this.postService.create(data)\n    this.title = ''\n    this.content = ''\n    this.buttonText = 'Post Created!! Please wait redirecting to your post'\n    setTimeout(()=>this.router.navigate(['/blog']),2000);\n\n    setTimeout(() => (this.buttonText = \"Create Post\"), 3000)\n  }\n  uploadImage(event) {\n     const file = event.target.files[0]\n    const path = `posts/${file.name}`\n    // console.log(event.target.files)\n    if (file.type.split('/')[0] !== 'image') {\n      return alert('only image files')\n      \n      \n    }\n    else {\n      \n      // const task = this.storage.upload(path,file)\n      // this.uploadPercent = task.percentageChanges()\n      // console.log('Image Uploaded')\n      // const fileRef = this.storage.ref(path);\n      const fileRef = this.storage.ref(path);\n      const task = this.storage.upload(path, file);\n       // observe percentage changes\n    this.uploadPercent = task.percentageChanges();\n    \n  // observe percentage changes\n  this.uploadPercent = task.percentageChanges();\n  // get notified when the download URL is available\n      // observe percentage changes\n      this.uploadPercent = task.percentageChanges();\n      // get notified when the download URL is available\n      task.snapshotChanges().pipe(\n          finalize(() => fileRef.getDownloadURL().subscribe(url=>{\n            this.image = url\n            this.downloadURL=url\n            console.log(url)\n          }) )\n       )\n      .subscribe()\n    }\n  \n}\n}\n\n\n  \n\n\n\n","<!-- <div *ngIf=\"post\">\n    <h3 >{{post.title}}</h3>\n    <p>posted by {{post.author}} &bull; on {{post.published.seconds * 1000  |date:'fullDate'}}</p>\n</div> -->\n\n<ng-container *ngIf=\"post\">\n<div [hidden]=\"!editing\">\n    <mat-card>\n        <h2>Update Post</h2>\n    \n\n    <mat-form-field>\n        <input matInput placeholder=\"Post Title\" [(ngModel)]=\"post.title\">\n    </mat-form-field><br>\n    \n    <mat-form-field>\n        <textarea matInput placeholder=\"Post Content\" [(ngModel)]=\"post.content\" rows=\"10\"></textarea>\n    </mat-form-field>\n    <br>\n    <button mat-raised-button color=\"accent\" (click)=\"updatePost()\">Save</button>\n    <button mat-button (click)=\"editing=false\">Cancel</button>\n</mat-card>\n</div>\n<div [hidden]=\"editing\">\n    <mat-card>\n        <img src=\"{{post.image}}\" alt=\"{{post.title}}\">\n        <p>posted by {{post.author}} \n            <!-- &bull; on {{post.published}} -->\n        </p>\n        <mat-card-content>\n            <h2>{{post.title}}</h2>\n\n            <p>{{post.content}}</p>\n            \n        \n        </mat-card-content>\n        <mat-card-actions align=\"end\" *ngIf =\"auth.currentUserId === post.authorId\"> \n            <button mat-icon-button (click)=\"editing=true\">\n                <mat-icon>edit</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"delete()\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </mat-card-actions>\n        </mat-card>\n</div>\n</ng-container>","import { AuthService } from './../../core/auth.service';\nimport { DatePipe } from '@angular/common';\nimport { Post } from './../Post';\nimport { PostService } from './../post.service';\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.css']\n})\nexport class PostDetailsComponent implements OnInit {\n\n  editing:boolean=false;\n  constructor(private route:ActivatedRoute,\n    private postService:PostService,\n    private router:Router,\n    public auth:AuthService\n    ) { }\npost:Post\n  ngOnInit(): void {\n    this.getPost()\n   // console.log(this)\n  }\ngetPost(){\n  const id = this.route.snapshot.paramMap.get('id');\n  return this.postService.getPostData(id).subscribe(data=>{\n    this.post=data;\n  \n  })\n}\ndelete(){\n  const id = this.route.snapshot.paramMap.get('id');\n  this.postService.delete(id)\n  this.router.navigate(['/blog'])\n}\n\nupdatePost(){\n  const formData={\n    title: this.post.title,\n    content: this.post.content,\n\n  };\nconst id = this.route.snapshot.paramMap.get('id');\nthis.postService.update(id,formData)\nthis.editing=false;\n}\n\n}\n","<!-- <div *ngFor=\"let posts of posts\">\r\n    <h2 (click)=\"onTitleClick(posts.id)\">{{posts.title}}</h2>\r\n    <p>{{posts.content}}</p>\r\n    <p>{{posts.id}}</p>\r\n\r\n   </div>\r\n -->\r\n\r\n\r\n   <section>\r\n       <mat-card *ngFor=\"let posts of posts\">\r\n       <mat-card-content (click)=\"onTitleClick(posts.id)\"   >\r\n           <img src=\"{{posts.image}}\" alt=\"{{posts.title}}\" >\r\n           <h2>{{posts.title}}</h2>\r\n           <p><small>Posted By {{posts.author}} \r\n               <!-- &bull; {{posts.published}} -->\r\n            </small></p>\r\n       </mat-card-content>\r\n       <mat-card-actions align=\"end\" *ngIf =\"auth.currentUserId === posts.authorId\"> \r\n           <button mat-icon-button (click)=\"delete(posts.id)\">\r\n               <mat-icon>delete</mat-icon>\r\n           </button>\r\n       </mat-card-actions>\r\n    </mat-card>\r\n   </section>","import { AuthService } from './../../core/auth.service';\nimport { Post } from './../Post';\nimport { PostService } from './../post.service';\nimport { Observable } from 'rxjs/observable';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n  posts:Post[]\n\n dataRes:Subscription\n \n  constructor(private postService:PostService,\n    private router:Router,\n    public auth:AuthService) { }\n\n  ngOnInit(): void {\nthis.postService.getPosts().subscribe(data=>{\n    //  console.log(data)\n      this.posts=data;\n     \n    })\n    \n  }\n  onTitleClick(id:string){\nthis.router.navigate(['/blog',id])\n  }\n\n  delete(id:string){\n    this.postService.delete(id)\n  }\n\n}\n","import { map } from 'rxjs/operators';\n\nimport { Post } from './Post';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject, asapScheduler, pipe, of, interval, merge, fromEvent} from 'rxjs';\n\n\nimport {\n  AngularFirestoreModule,\n  AngularFirestore,\n  AngularFirestoreCollection,\n   AngularFirestoreDocument\n} from '@angular/fire/firestore';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PostService {\n  private postCollection:AngularFirestoreCollection<Post>\n  posts:Observable<Post[]>;\n\n  postDoc:AngularFirestoreDocument<Post>\n  constructor(private readonly afs: AngularFirestore) {\n    // this.postCollection=this.afs.collection('posts',ref=>\n    // ref.orderBy('published','desc')\n    // )\n\n    this.postCollection = afs.collection<Post>('posts');\n    this.posts = this.postCollection.snapshotChanges().pipe(\n      map(actions=>actions.map(a=>{\n        const data= a.payload.doc.data() as Post;\n        const id = a.payload.doc.id;\n        return {id,...data};\n      }))\n    )\n\n    // this.posts=this.afs.collection('posts').valueChanges();\n   }\n\n\n  getPosts(){\n    return this.posts;\n    \n    \n    // .pipe(map(changes=>{\n    //   return changes.map(a=>{\n    //     const data = a.payload.doc.data() as Post[]\n    //     const id =a.payload.doc.id\n    //     return {id,...data}\n    //   })}))\n  }\n  getPostData(id:string){\n    this.postDoc = this.afs.doc<Post>(`posts/${id}`)\n    return this.postDoc.valueChanges()\n\n  }\n  \ncreate(data:Post){\nthis.postCollection.add(data)\n}\nupdate(id:string,formData){\n  return this.getPost(id).update(formData)\n\n}\n\ngetPost(id:string){\n  return this.afs.doc(`posts/${id}`)\n\n}\ndelete(id:string){\nreturn this.getPost(id).delete();\n}\n \n\n}\n","import { SharedModule } from './../shared/shared.module';\nimport { PostService } from './post.service';\nimport { NgModule } from '@angular/core';\n\nimport { PostDashboardComponent } from './post-dashboard/post-dashboard.component';\nimport { PostDetailsComponent } from './post-details/post-details.component';\nimport { PostListComponent } from './post-list/post-list.component';\n\n\n\n@NgModule({\n  declarations: [PostDashboardComponent, PostDetailsComponent, PostListComponent],\n  imports: [\n    \n   SharedModule\n  ],\n  providers:[PostService]\n})\nexport class PostsModule { }\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <span routerLink=\"/blog\">Anuj's Blog</span>\n        <span class=\"spacer\"></span>\n        <div *ngIf=\"auth.afAuth.authState | async as user; else showLogin\">\n            <button mat-raised-button color=\"accent\" routerLink=\"/dashboard\">Write a Post</button>\n            <!-- <span>Hello {{user.displayName}}!</span> -->\n            <button mat-button (click)=\"auth.logout()\">Logout</button>\n\n        </div>\n        <ng-template #showLogin>\n            <button mat-button (click)=\"auth.login()\">Login with Google</button>\n            <!-- <button mat-button (click)=\"auth.loginWithFb()\">Login with Facebook</button> -->\n        </ng-template>\n    </mat-toolbar-row>\n</mat-toolbar>\n","import { AuthService } from './../../core/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public auth:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material.module';\n\nimport {FormsModule} from '@angular/forms'\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n\n\n\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule,\n    FormsModule\n  ],\n  exports:[CommonModule,\n    MaterialModule,NavbarComponent,RouterModule,FormsModule]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,  \n  firebase:{\n  apiKey: \"AIzaSyDhjFDnOHem6ZG_NZU1M43n3DMDoAdV2GI\",\n  authDomain: \"myblog-38636.firebaseapp.com\",\n  databaseURL: \"https://myblog-38636.firebaseio.com\",\n  projectId: \"myblog-38636\",\n  storageBucket: \"myblog-38636.appspot.com\",\n  messagingSenderId: \"492692266873\",\n  appId: \"1:492692266873:web:4adb2516a452a3aa1659a8\",\n  measurementId: \"G-49B50P261X\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}