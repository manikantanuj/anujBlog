{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/auth.service.ts","./src/app/core/core.module.ts","./src/app/footer/footer.component.html","./src/app/footer/footer.component.ts","./src/app/material.module.ts","./src/app/posts/post-dashboard/post-dashboard.component.html","./src/app/posts/post-dashboard/post-dashboard.component.ts","./src/app/posts/post-details/post-details.component.html","./src/app/posts/post-details/post-details.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post.service.ts","./src/app/posts/posts.module.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { PostDashboardComponent } from './posts/post-dashboard/post-dashboard.component';\nimport { PostDetailsComponent } from './posts/post-details/post-details.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path:'',component:PostListComponent},\n  {path:'blog',component:PostListComponent},\n  {path:'blog/:id',component:PostDetailsComponent},\n  {path:'dashboard',component:PostDashboardComponent}\n];  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myblog';\n}\n","import { PostService } from './posts/post.service';\nimport { Observable, from, observable } from 'rxjs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { PostsModule } from './posts/posts.module';\nimport { HttpClientModule } from  '@angular/common/http';\nimport {DatePipe} from '@angular/common';\nimport { FooterComponent } from './footer/footer.component'\n// import {}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, // firestore\n   // AngularFireAuth, // auth\n    AngularFireStorageModule, // storage\n    BrowserAnimationsModule,\n    AngularFireAnalyticsModule,\n    PostsModule,\n    HttpClientModule,\n \n\n    \n  ],\n  providers: [PostService,DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Injectable } from '@angular/core';\nimport * as firebase from \"firebase/app\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authState:any=null\n\n  constructor(public afAuth:AngularFireAuth) {\n    this.afAuth.authState.subscribe(data=>\n      this.authState=data\n    )\n   }\n\n   get authenticated():boolean{\n     return this.authState!==null\n   }\n   get currentUserId():string{\n     return this.authenticated ? this.authState.uid :null\n   }\n\n  login(){\n   this.afAuth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n  //  this.afAuth.signInWithPopup(new firebase.auth.FacebookAuthProvider());\n  \n  }\n  // loginWithFb(){\n  //   this.afAuth.signInWithPopup(new firebase.auth.FacebookAuthProvider());\n  // }\n  logout(){\n this.afAuth.signOut();\n  }\n}\n","import { AuthService } from './auth.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  providers:[AuthService],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<div class=\"fixed-footer\">\n    <div class=\"container\"> Developed By &bull; <u>Music & Travel & LIfe 2020</u> <br>\n    Follow us on social platforms. \n    </div>  \n    \n    \n    <div class=\"footer-social\">\n        <a href=\"https://www.instagram.com/anuj112.raj/\" target=\"_blank\" class=\"fa fa-instagram\"></a>\n        <a href=\"https://www.facebook.com/Manikantanuj/\" target=\"_blank\" class=\"fa fa-facebook\"></a>\n       <a href=\"https://twitter.com/manikantanuj03/  \" target=\"_blank\" class=\"fa fa-twitter\"></a>\n       <a href=\"https://www.linkedin.com/in/anuj-raj03/  \" target=\"_blank\" class=\"fa fa-linkedin\"></a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatButtonModule, \n    MatToolbarModule, \n    MatExpansionModule, \n    MatInputModule, \n    MatProgressBarModule,\n    MatCardModule,\n    MatIconModule\n  ],\n  exports: [MatButtonModule,\n     MatToolbarModule,\n      MatExpansionModule, \n      MatInputModule, \n      MatProgressBarModule,\n      MatCardModule,\n      MatIconModule\n    ]\n})\nexport class MaterialModule { }\n","<section>\n    <mat-accordion>\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Create a Post\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <div>\n                <input type=\"file\" name =\"file\" id=\"file\" (change)=\"uploadImage($event)\">\n                <div [hidden]=\"!uploadPercent\">\n                    <mat-progress-bar mode=\"determinate\" value=\"{{uploadPercent | async}}\"></mat-progress-bar>\n                </div>\n                <div [hidden]=!image>\n                    <img [src]=\"image || '//:0' \">\n                </div>\n                \n            </div>\n            <mat-form-field>\n                <input matInput placeholder=\"Post Title\" [(ngModel)]=\"title\">\n            </mat-form-field><br>\n            \n            <mat-form-field>\n                <textarea matInput placeholder=\"Post Content\" [(ngModel)]=\"content\" rows=\"10\"></textarea>\n            </mat-form-field>\n            <br>\n            <button mat-raised-button color=\"accent\" (click)=\"createPost()\" [disabled] = \"!title || !content || !image\">{{buttonText}}</button>\n            \n        </mat-expansion-panel>\n    </mat-accordion>\n</section>\n\n\n","import { Router } from '@angular/router';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Observable } from 'rxjs';\nimport { PostService } from './../post.service';\nimport { AuthService } from './../../core/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'app-post-dashboard',\n  templateUrl: './post-dashboard.component.html',\n  styleUrls: ['./post-dashboard.component.css']\n})\nexport class PostDashboardComponent implements OnInit {\n  title: string\n  image: any = null\n  content: string\n  // file:File =null\n  buttonText: string = \"Create Post\"\n\n  uploadPercent: Observable<number>\n  downloadURL: Observable<string>\n  constructor(private auth: AuthService,\n    private postService: PostService,\n    private storage: AngularFireStorage,\n    private router:Router) {\n    // const ref = this.storage.ref('users/davideast.jpg');\n    // this.profileUrl = ref.getDownloadURL();\n  }\n\n  ngOnInit(): void {\n  }\n  createPost() {\n    const data = {\n      author: this.auth.authState.displayName || this.auth.authState.email,\n      authorId: this.auth.currentUserId,\n\n      content: this.content,\n      image: this.image,\n      published: new Date(),\n      title: this.title\n    };\n    this.postService.create(data)\n    this.title = ''\n    this.content = ''\n    this.buttonText = 'Post Created!! Please wait redirecting to your post'\n    setTimeout(()=>this.router.navigate(['/blog']),2000);\n\n    setTimeout(() => (this.buttonText = \"Create Post\"), 3000)\n  }\n  uploadImage(event) {\n     const file = event.target.files[0]\n    const path = `posts/${file.name}`\n    // console.log(event.target.files)\n    if (file.type.split('/')[0] !== 'image') {\n      return alert('only image files')\n      \n      \n    }\n    else {\n      \n      // const task = this.storage.upload(path,file)\n      // this.uploadPercent = task.percentageChanges()\n      // console.log('Image Uploaded')\n      // const fileRef = this.storage.ref(path);\n      const fileRef = this.storage.ref(path);\n      const task = this.storage.upload(path, file);\n       // observe percentage changes\n    this.uploadPercent = task.percentageChanges();\n    \n  // observe percentage changes\n  this.uploadPercent = task.percentageChanges();\n  // get notified when the download URL is available\n      // observe percentage changes\n      this.uploadPercent = task.percentageChanges();\n      // get notified when the download URL is available\n      task.snapshotChanges().pipe(\n          finalize(() => fileRef.getDownloadURL().subscribe(url=>{\n            this.image = url\n            this.downloadURL=url\n            console.log(url)\n          }) )\n       )\n      .subscribe()\n    }\n  \n}\n}\n\n\n  \n\n\n\n","<!-- <div *ngIf=\"post\">\n    <h3 >{{post.title}}</h3>\n    <p>posted by {{post.author}} &bull; on {{post.published.seconds * 1000  |date:'fullDate'}}</p>\n</div> -->\n\n<ng-container *ngIf=\"post\">\n<div [hidden]=\"!editing\">\n    <mat-card>\n        <h2>Update Post</h2>\n    \n\n    <mat-form-field>\n        <input matInput placeholder=\"Post Title\" [(ngModel)]=\"post.title\">\n    </mat-form-field><br>\n    \n    <mat-form-field>\n        <textarea matInput placeholder=\"Post Content\" [(ngModel)]=\"post.content\" rows=\"10\"></textarea>\n    </mat-form-field>\n    <br>\n    <button mat-raised-button color=\"accent\" (click)=\"updatePost()\">Save</button>\n    <button mat-button (click)=\"editing=false\">Cancel</button>\n</mat-card>\n</div>\n<div [hidden]=\"editing\">\n    <mat-card>\n        <img src=\"{{post.image}}\" alt=\"{{post.title}}\">\n        <p>posted by {{post.author}} \n            <!-- &bull; on {{post.published}} -->\n        </p>\n        <mat-card-content>\n            <h2>{{post.title}}</h2>\n\n            <p>{{post.content}}</p>\n            \n        \n        </mat-card-content>\n        <mat-card-actions align=\"end\" *ngIf =\"auth.currentUserId === post.authorId\"> \n            <button mat-icon-button (click)=\"editing=true\">\n                <mat-icon>edit</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"delete()\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </mat-card-actions>\n        </mat-card>\n</div>\n</ng-container>","import { AuthService } from './../../core/auth.service';\nimport { DatePipe } from '@angular/common';\nimport { Post } from './../Post';\nimport { PostService } from './../post.service';\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.css']\n})\nexport class PostDetailsComponent implements OnInit {\n\n  editing:boolean=false;\n  constructor(private route:ActivatedRoute,\n    private postService:PostService,\n    private router:Router,\n    public auth:AuthService\n    ) { }\npost:Post\n  ngOnInit(): void {\n    this.getPost()\n   // console.log(this)\n  }\ngetPost(){\n  const id = this.route.snapshot.paramMap.get('id');\n  return this.postService.getPostData(id).subscribe(data=>{\n    this.post=data;\n  \n  })\n}\ndelete(){\n  const id = this.route.snapshot.paramMap.get('id');\n  this.postService.delete(id)\n  this.router.navigate(['/blog'])\n}\n\nupdatePost(){\n  const formData={\n    title: this.post.title,\n    content: this.post.content,\n\n  };\nconst id = this.route.snapshot.paramMap.get('id');\nthis.postService.update(id,formData)\nthis.editing=false;\n}\n\n}\n","<!-- <div *ngFor=\"let posts of posts\">\r\n    <h2 (click)=\"onTitleClick(posts.id)\">{{posts.title}}</h2>\r\n    <p>{{posts.content}}</p>\r\n    <p>{{posts.id}}</p>\r\n\r\n   </div>\r\n -->\r\n\r\n\r\n   <section>\r\n       <mat-card *ngFor=\"let posts of posts\">\r\n       <mat-card-content (click)=\"onTitleClick(posts.id)\"   >\r\n           <img src=\"{{posts.image}}\" alt=\"{{posts.title}}\" >\r\n           <h2>{{posts.title}}</h2>\r\n           <p><small>Posted By {{posts.author}} \r\n               <!-- &bull; {{posts.published}} -->\r\n            </small></p>\r\n       </mat-card-content>\r\n       <mat-card-actions align=\"end\" *ngIf =\"auth.currentUserId === posts.authorId\"> \r\n           <button mat-icon-button (click)=\"delete(posts.id)\">\r\n               <mat-icon>delete</mat-icon>\r\n           </button>\r\n       </mat-card-actions>\r\n    </mat-card>\r\n   </section>","import { AuthService } from './../../core/auth.service';\nimport { Post } from './../Post';\nimport { PostService } from './../post.service';\nimport { Observable } from 'rxjs/observable';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n  posts:Post[]\n\n dataRes:Subscription\n \n  constructor(private postService:PostService,\n    private router:Router,\n    public auth:AuthService) { }\n\n  ngOnInit(): void {\nthis.postService.getPosts().subscribe(data=>{\n    //  console.log(data)\n      this.posts=data;\n     \n    })\n    \n  }\n  onTitleClick(id:string){\nthis.router.navigate(['/blog',id])\n  }\n\n  delete(id:string){\n    this.postService.delete(id)\n  }\n\n}\n","import { map } from 'rxjs/operators';\n\nimport { Post } from './Post';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject, asapScheduler, pipe, of, interval, merge, fromEvent} from 'rxjs';\n\n\nimport {\n  AngularFirestoreModule,\n  AngularFirestore,\n  AngularFirestoreCollection,\n   AngularFirestoreDocument\n} from '@angular/fire/firestore';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PostService {\n  private postCollection:AngularFirestoreCollection<Post>\n  posts:Observable<Post[]>;\n\n  postDoc:AngularFirestoreDocument<Post>\n  constructor(private readonly afs: AngularFirestore) {\n    // this.postCollection=this.afs.collection('posts',ref=>\n    // ref.orderBy('published','desc')\n    // )\n\n    this.postCollection = afs.collection<Post>('posts');\n    this.posts = this.postCollection.snapshotChanges().pipe(\n      map(actions=>actions.map(a=>{\n        const data= a.payload.doc.data() as Post;\n        const id = a.payload.doc.id;\n        return {id,...data};\n      }))\n    )\n\n    // this.posts=this.afs.collection('posts').valueChanges();\n   }\n\n\n  getPosts(){\n    return this.posts;\n    \n    \n    // .pipe(map(changes=>{\n    //   return changes.map(a=>{\n    //     const data = a.payload.doc.data() as Post[]\n    //     const id =a.payload.doc.id\n    //     return {id,...data}\n    //   })}))\n  }\n  getPostData(id:string){\n    this.postDoc = this.afs.doc<Post>(`posts/${id}`)\n    return this.postDoc.valueChanges()\n\n  }\n  \ncreate(data:Post){\nthis.postCollection.add(data)\n}\nupdate(id:string,formData){\n  return this.getPost(id).update(formData)\n\n}\n\ngetPost(id:string){\n  return this.afs.doc(`posts/${id}`)\n\n}\ndelete(id:string){\nreturn this.getPost(id).delete();\n}\n \n\n}\n","import { SharedModule } from './../shared/shared.module';\nimport { PostService } from './post.service';\nimport { NgModule } from '@angular/core';\n\nimport { PostDashboardComponent } from './post-dashboard/post-dashboard.component';\nimport { PostDetailsComponent } from './post-details/post-details.component';\nimport { PostListComponent } from './post-list/post-list.component';\n\n\n\n@NgModule({\n  declarations: [PostDashboardComponent, PostDetailsComponent, PostListComponent],\n  imports: [\n    \n   SharedModule\n  ],\n  providers:[PostService]\n})\nexport class PostsModule { }\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <span routerLink=\"/blog\">Anuj's Blog</span>\n        <span class=\"spacer\"></span>\n        <div *ngIf=\"auth.afAuth.authState | async as user; else showLogin\">\n            <button mat-raised-button color=\"accent\" routerLink=\"/dashboard\">Write a Post</button>\n            <!-- <span>Hello {{user.displayName}}!</span> -->\n            <button mat-button (click)=\"auth.logout()\">Logout</button>\n\n        </div>\n        <ng-template #showLogin>\n            <button mat-button (click)=\"auth.login()\">Login with Google</button>\n            <!-- <button mat-button (click)=\"auth.loginWithFb()\">Login with Facebook</button> -->\n        </ng-template>\n    </mat-toolbar-row>\n</mat-toolbar>\n","import { AuthService } from './../../core/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public auth:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material.module';\n\nimport {FormsModule} from '@angular/forms'\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n\n\n\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule,\n    FormsModule\n  ],\n  exports:[CommonModule,\n    MaterialModule,NavbarComponent,RouterModule,FormsModule]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,  \n  firebase:{\n  apiKey: \"AIzaSyDhjFDnOHem6ZG_NZU1M43n3DMDoAdV2GI\",\n  authDomain: \"myblog-38636.firebaseapp.com\",\n  databaseURL: \"https://myblog-38636.firebaseio.com\",\n  projectId: \"myblog-38636\",\n  storageBucket: \"myblog-38636.appspot.com\",\n  messagingSenderId: \"492692266873\",\n  appId: \"1:492692266873:web:4adb2516a452a3aa1659a8\",\n  measurementId: \"G-49B50P261X\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}